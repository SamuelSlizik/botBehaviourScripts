from sikuli import *
import os
import logger


def exportDocxToPdf():
    try:
        click("1689179446708.png")
        wait("1689179467958.png")
        click("1689173481864.png")
        wait("1689179550774.png")
        doubleClick("1689179550774.png")
        wait("1689179658605.png")
        doubleClick("1689179658605.png")
        wait(1)
        doubleClick()
        wait(1)
        click("1689179720614.png")
        wait(1)
        if (exists("1689179977230.png")):
            click("1689180003386.png")
        logger.log("info", "Finished exporting docx to pdf", "success")
    except Exception as ex:
        logger.log("error", "Error while exporting docx to pdf", "failure", ex)


def exportDocxToPptx():
    try:
        click(Pattern("1689238920896.png").targetOffset(86,136))
        wait(0.5)
        type("a", Key.CTRL)
        wait(0.5)
        type("c", Key.CTRL)
        click("1689239265630.png")
        wait("1689239356068.png")
        type("LibreOffice Impress")
        wait("1689239380272.png")
        type(Key.ENTER)
        wait("1689240083708.png")
        click("1689240083708.png")
        type("m", Key.CTRL)
        wait("1689240135623.png")
        click("1689240135623.png")
        wait(0.5)
        type("v", Key.CTRL)
        wait(0.5)
        click("1689240483068.png")
        wait("1689240505021.png")
        click(Pattern("1689240505021.png").targetOffset(-27,-22))
        wait("1689240529224.png")
        click("1689240529224.png")
        wait("1689240561208.png")
        doubleClick(Pattern("1689240561208.png").targetOffset(37,2))
        wait(0.5)
        type("c", Key.CTRL)
        click("1689240083708.png")
        click("1689240642931.png")
        click("1689241465255.png")
        wait(0.5)
        type(Key.UP)
        wait("1689240712224.png")
        click("1689240712224.png")
        wait(0.5)
        type("v", Key.CTRL)
        wait(0.5)
        type("s", Key.CTRL + Key.SHIFT)
        wait("1689240893662.png")
        type("v", Key.CTRL)
        click(Pattern("1689240893662.png").targetOffset(102,-2))
        wait("1689240969401.png")
        click("1689240969401.png")
        wait(0.5)
        click("1689173481864-1.png")
        wait("1689179550774-1.png")
        doubleClick("1689179550774-1.png")
        wait("1689179658605-1.png")
        doubleClick("1689179658605-1.png")
        wait(1)
        doubleClick()
        click("1689241011865.png")
        wait(1)
        if (exists("1689241605808.png")):
            click(Pattern("1689241605808.png").targetOffset(130,67))
        wait("1689241300942.png")
        click("1689241300942.png")
        wait(1)
        click("1689241191036.png")
        wait("1689241404880.png")
        click("1689241404880.png")
        logger.log("info", "Finished exporting docx to pptx", "success")
    except Exception as ex:
        logger.log("error", "Error while exporting docx to pptx", "failure", ex)


def exportXlsxToDocx():
    try:
        click(Pattern("1689242265568.png").targetOffset(22,19))
        wait(0.5)
        type("a", Key.CTRL)
        wait(1)
        type("c", Key.CTRL)
        wait(1)
        click("1689239265630-1.png")
        wait("1689239356068-1.png")
        type("LibreOffice Writer")
        wait("1689242356584.png")
        type(Key.ENTER)
        wait("1689242423224.png")
        wait(2)
        type("v", Key.CTRL)
        wait(5)
        click("1689242595771.png")
        wait("1689242609052.png")
        click(Pattern("1689242609052.png").targetOffset(-26,-21))
        wait("1689240529224-1.png")
        click("1689240529224-1.png")
        wait("1689242633818.png")
        doubleClick(Pattern("1689242633818.png").targetOffset(35,3))
        wait(0.5)
        type("c", Key.CTRL)
        click("1689240083708-1.png")
        click("1689240483068-1.png")
        wait(0.5)
        type("s", Key.CTRL + Key.SHIFT)
        wait("1689240893662-1.png")
        type("v", Key.CTRL)
        click(Pattern("1689240893662-1.png").targetOffset(102,-2))
        wait("1689242506849.png")
        click("1689242506849.png")
        wait(0.5)
        click("1689173481864-2.png")
        wait("1689179550774-2.png")
        doubleClick("1689179550774-2.png")
        wait("1689179658605-2.png")
        doubleClick("1689179658605-2.png")
        wait(1)
        doubleClick()
        click("1689241011865-1.png")
        wait(1)
        if (exists("1689242742367.png")):
            click(Pattern("1689242742367.png").targetOffset(130,72))
        wait("1689242703849.png")
        click("1689242703849.png")
        wait(1)
        click("1689241191036-1.png")
        logger.log("info", "Finished exporting xlsx to docx", "success")
    except Exception as ex:
        logger.log("error", "Error while exporting xlsx to docx", "failure", ex)

def exportXlsxToPdf():
    try:
        click("1689179446708-1.png")
        wait("1689243191005.png")
        click("1689173481864-3.png")
        wait("1689179550774-3.png")
        doubleClick("1689179550774-3.png")
        wait("1689179658605-3.png")
        doubleClick("1689179658605-3.png")
        wait(1)
        doubleClick()
        wait(1)
        click("1689179720614-1.png")
        wait(1)
        if (exists("1689179977230-1.png")):
            click("1689180003386-1.png")
        logger.log("info", "Finished exporting xlsx to pdf", "success")
    except Exception as ex:
        logger.log("error", "Error while exporting xlsx to pdf", "failure", ex)


def exportXlsxToPptx():
    try:
        click(Pattern("1689249186394.png").targetOffset(28,116))
        wait(0.5)
        type("a", Key.CTRL)
        wait(1)
        type("c", Key.CTRL)
        wait(1)
        click("1689239265630-2.png")
        wait("1689239356068-2.png")
        type("LibreOffice Impress")
        wait("1689239380272-1.png")
        type(Key.ENTER)
        wait("1689240083708-2.png")
        click("1689240083708-2.png")
        type("m", Key.CTRL)
        wait("1689240135623-1.png")
        click(Pattern("1689240135623-1.png").targetOffset(-157,-15))
        wait(0.5)
        type("v", Key.CTRL)
        wait(5)
        click("1689242595771-1.png")
        wait("1689242609052-2.png")
        click(Pattern("1689242609052-2.png").targetOffset(-24,-17))
        wait("1689240529224-2.png")
        click("1689240529224-2.png")
        wait("1689242633818-2.png")
        doubleClick(Pattern("1689242633818-1.png").targetOffset(35,2))
        wait(0.5)
        type("c", Key.CTRL)
        click("1689240083708-2.png")
        click("1689240642931-1.png")
        click("1689241465255-1.png")
        wait(0.5)
        type(Key.UP)
        wait("1689240712224-1.png")
        click("1689240712224-1.png")
        wait(0.5)
        type("v", Key.CTRL)
        wait(0.5)
        type("s", Key.CTRL + Key.SHIFT)
        wait("1689240893662-2.png")
        type("v", Key.CTRL)
        click(Pattern("1689240893662-2.png").targetOffset(102,-2))
        wait("1689240969401-1.png")
        click("1689240969401-1.png")
        wait(0.5)
        click("1689173481864-4.png")
        wait("1689179550774-4.png")
        doubleClick("1689179550774-4.png")
        wait("1689179658605-4.png")
        doubleClick("1689179658605-4.png")
        wait(1)
        doubleClick()
        click("1689241011865-2.png")
        wait(1)
        if (exists("1689241605808-1.png")):
            click(Pattern("1689241605808-1.png").targetOffset(130,67))
        wait("1689241300942-1.png")
        click("1689241300942-1.png")
        wait(1)
        click("1689241191036-2.png")
        wait("1689241404880-1.png")
        click("1689241404880-1.png")
        logger.log("info", "Finished exporting xlsx to pptx", "success")
    except Exception as ex:
        logger.log("error", "Error while exporting xlsx to pptx", "failure", ex)




if __name__ == "__main__":
    if len(sys.argv) < 1:
        logger.log("error", "No function name provided", "failure")
        sys.exit(1)

    function_name = sys.argv[1]

    if function_name == "exportXlsxToDocx":
        exportXlsxToDocx()
    elif function_name == "exportXlsxToPdf":
        exportXlsxToPdf()
    elif function_name == "exportXlsxToPptx":
        exportXlsxToPptx()
    elif function_name == "exportDocxToPdf":
        exportDocxToPdf()
    elif function_name == "exportDocxToPptx":
        exportDocxToPptx()